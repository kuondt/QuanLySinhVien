// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLySinhVien.Data.EF;

namespace QuanLySinhVien.Data.Migrations
{
    [DbContext(typeof(QLSV_DBContext))]
    partial class QLSV_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8dd4e4e7-cbb1-4db8-8cd8-3024401afc74"),
                            RoleId = new Guid("7e2de1ee-b97b-4698-abe4-c22a0332b2c9")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfig");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is home"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is keyword"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is description"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e2de1ee-b97b-4698-abe4-c22a0332b2c9"),
                            ConcurrencyStamp = "e0cee5fe-c24e-4b4c-8a9e-81b939aa9e9e",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = new Guid("ddcfd40f-0c20-4bbd-afbf-5936032ddde5"),
                            ConcurrencyStamp = "5f76e5ba-4052-41f9-ad62-af398784930e",
                            Description = "Nhân viên",
                            Name = "nhanvien",
                            NormalizedName = "nhanvien"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8dd4e4e7-cbb1-4db8-8cd8-3024401afc74"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ccb2bc95-ee8c-479a-8b38-fd8b1b06ac4f",
                            Email = "cuong.263@gmail.com",
                            EmailConfirmed = true,
                            Ho = "Dao",
                            HoTen = "Dao Cuong",
                            LockoutEnabled = false,
                            NgaySinh = new DateTime(1998, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "cuong.263@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEPPQSEWaM4gDdCTqcM+HvIsty/M1GGv4GLAkJEJ5Hxx0VQWYVPGQxgo8FNzMF18pnQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Ten = "Cuong",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.ChiTiet_ChuongTrinhDaoTao_MonHoc", b =>
                {
                    b.Property<string>("ID_ChuongTrinhDaoTao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_MonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HK_HocKy")
                        .HasColumnType("int");

                    b.Property<int>("HK_NamHoc")
                        .HasColumnType("int");

                    b.HasKey("ID_ChuongTrinhDaoTao", "ID_MonHoc", "HK_HocKy", "HK_NamHoc");

                    b.HasIndex("ID_MonHoc");

                    b.HasIndex("HK_HocKy", "HK_NamHoc");

                    b.ToTable("ChiTiet_ChuongTrinhDaoTao_MonHocs");

                    b.HasData(
                        new
                        {
                            ID_ChuongTrinhDaoTao = "HTTT2016",
                            ID_MonHoc = "INT001",
                            HK_HocKy = 1,
                            HK_NamHoc = 2016
                        },
                        new
                        {
                            ID_ChuongTrinhDaoTao = "HTTT2016",
                            ID_MonHoc = "INT005",
                            HK_HocKy = 1,
                            HK_NamHoc = 2016
                        },
                        new
                        {
                            ID_ChuongTrinhDaoTao = "HTTT2016",
                            ID_MonHoc = "INT006",
                            HK_HocKy = 1,
                            HK_NamHoc = 2016
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.ChuongTrinhDaoTao", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id_Khoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<string>("TenChuongTrinh")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.HasIndex("Id_Khoa");

                    b.ToTable("ChuongTrinhDaoTaos");

                    b.HasData(
                        new
                        {
                            ID = "HTTT2016",
                            Id_Khoa = "KTCN",
                            Nam = 2016,
                            TenChuongTrinh = "Hệ thống thông tin"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.DanhSach_SinhVien_LopHocPhan", b =>
                {
                    b.Property<string>("ID_SinhVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_LopHocPhan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Diem")
                        .HasColumnType("real");

                    b.Property<int>("LanThi")
                        .HasColumnType("int");

                    b.HasKey("ID_SinhVien", "ID_LopHocPhan");

                    b.HasIndex("ID_LopHocPhan");

                    b.ToTable("DanhSach_SinhVien_LopHocPhans");

                    b.HasCheckConstraint("CK_Diem_Duoi_10", "Diem <= 10");

                    b.HasData(
                        new
                        {
                            ID_SinhVien = "161A010001",
                            ID_LopHocPhan = "161INT001",
                            Diem = 8.5f,
                            LanThi = 1
                        },
                        new
                        {
                            ID_SinhVien = "161A010001",
                            ID_LopHocPhan = "161INT002",
                            Diem = 10f,
                            LanThi = 1
                        },
                        new
                        {
                            ID_SinhVien = "161A010002",
                            ID_LopHocPhan = "161INT001",
                            Diem = 7f,
                            LanThi = 1
                        },
                        new
                        {
                            ID_SinhVien = "161A010003",
                            ID_LopHocPhan = "161INT001",
                            Diem = 10f,
                            LanThi = 1
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.GiangVien", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ID_Khoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ID_Khoa");

                    b.ToTable("GiangViens");

                    b.HasData(
                        new
                        {
                            ID = "GV001",
                            DiaChi = "624 Âu Cơ",
                            Email = "nva@vhu.edu.vn",
                            GioiTinh = 1,
                            Ho = "Nguyễn Văn",
                            HoTen = "Nguyễn Văn A",
                            ID_Khoa = "KTCN",
                            IsActive = 1,
                            NgaySinh = new DateTime(1975, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0987654321",
                            SoThuTu = 0,
                            Ten = "A"
                        },
                        new
                        {
                            ID = "GV002",
                            DiaChi = "642 Âu Cơ",
                            Email = "pvb@vhu.edu.vn",
                            GioiTinh = 1,
                            Ho = "Phạm Văn",
                            HoTen = "Phạm Văn B",
                            ID_Khoa = "KTCN",
                            IsActive = 1,
                            NgaySinh = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "012332123",
                            SoThuTu = 0,
                            Ten = "B"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.HocKy_NamHoc", b =>
                {
                    b.Property<int>("HocKy")
                        .HasColumnType("int");

                    b.Property<int>("NamHoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("HocKy", "NamHoc");

                    b.ToTable("HocKy_NamHocs");

                    b.HasData(
                        new
                        {
                            HocKy = 1,
                            NamHoc = 2016,
                            NgayBatDau = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2016, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HocKy = 2,
                            NamHoc = 2016,
                            NgayBatDau = new DateTime(2016, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2016, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HocKy = 3,
                            NamHoc = 2016,
                            NgayBatDau = new DateTime(2016, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2016, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.Khoa", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Khoas");

                    b.HasData(
                        new
                        {
                            ID = "KTCN",
                            TenKhoa = "Kỹ thuật công nghệ"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.LopBienChe", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_GiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_Khoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NamBatDau")
                        .HasColumnType("int");

                    b.Property<int>("NamKetThuc")
                        .HasColumnType("int");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_GiangVien");

                    b.HasIndex("ID_Khoa");

                    b.ToTable("LopBienChes");

                    b.HasData(
                        new
                        {
                            ID = "161A0101",
                            ID_GiangVien = "GV001",
                            ID_Khoa = "KTCN",
                            NamBatDau = 2016,
                            NamKetThuc = 2020,
                            SoThuTu = 0
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.LopHocPhan", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BuoiHoc")
                        .HasColumnType("int");

                    b.Property<int>("HK_HocKy")
                        .HasColumnType("int");

                    b.Property<int>("HK_NamHoc")
                        .HasColumnType("int");

                    b.Property<string>("ID_MonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_Phong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("NgayHoc")
                        .HasColumnType("int");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_MonHoc");

                    b.HasIndex("ID_Phong");

                    b.HasIndex("HK_HocKy", "HK_NamHoc");

                    b.ToTable("LopHocPhans");

                    b.HasData(
                        new
                        {
                            ID = "161INT001",
                            BuoiHoc = 1,
                            HK_HocKy = 1,
                            HK_NamHoc = 2016,
                            ID_MonHoc = "INT001",
                            ID_Phong = "BPH001",
                            IsActive = 1,
                            NgayHoc = 2,
                            SoThuTu = 0
                        },
                        new
                        {
                            ID = "161INT002",
                            BuoiHoc = 1,
                            HK_HocKy = 1,
                            HK_NamHoc = 2016,
                            ID_MonHoc = "INT001",
                            ID_Phong = "BPH002",
                            IsActive = 1,
                            NgayHoc = 2,
                            SoThuTu = 0
                        },
                        new
                        {
                            ID = "161INT003",
                            BuoiHoc = 1,
                            HK_HocKy = 1,
                            HK_NamHoc = 2016,
                            ID_MonHoc = "INT005",
                            ID_Phong = "BPH003",
                            IsActive = 1,
                            NgayHoc = 3,
                            SoThuTu = 0
                        },
                        new
                        {
                            ID = "161INT004",
                            BuoiHoc = 1,
                            HK_HocKy = 1,
                            HK_NamHoc = 2016,
                            ID_MonHoc = "INT006",
                            ID_Phong = "BPH002",
                            IsActive = 1,
                            NgayHoc = 4,
                            SoThuTu = 0
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.MonHoc", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_Khoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.Property<int>("SoTiet")
                        .HasColumnType("int");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Khoa");

                    b.ToTable("MonHocs");

                    b.HasData(
                        new
                        {
                            ID = "INT001",
                            ID_Khoa = "KTCN",
                            SoThuTu = 0,
                            SoTiet = 30,
                            SoTinChi = 2,
                            TenMonHoc = "Kỹ thuật lập trình"
                        },
                        new
                        {
                            ID = "INT002",
                            ID_Khoa = "KTCN",
                            SoThuTu = 0,
                            SoTiet = 30,
                            SoTinChi = 2,
                            TenMonHoc = "Cấu trúc dữ liệu và giải thuật"
                        },
                        new
                        {
                            ID = "INT003",
                            ID_Khoa = "KTCN",
                            SoThuTu = 0,
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMonHoc = "Cơ sở dữ liệu"
                        },
                        new
                        {
                            ID = "INT004",
                            ID_Khoa = "KTCN",
                            SoThuTu = 0,
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMonHoc = "Hệ điều hành	"
                        },
                        new
                        {
                            ID = "INT005",
                            ID_Khoa = "KTCN",
                            SoThuTu = 0,
                            SoTiet = 45,
                            SoTinChi = 3,
                            TenMonHoc = "Vật lý đại cương"
                        },
                        new
                        {
                            ID = "INT006",
                            ID_Khoa = "KTCN",
                            SoThuTu = 0,
                            SoTiet = 30,
                            SoTinChi = 2,
                            TenMonHoc = "Toán cao cấp"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.PhanCong", b =>
                {
                    b.Property<string>("ID_LopHocPhan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_GiangVien")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID_LopHocPhan", "ID_GiangVien");

                    b.HasIndex("ID_GiangVien");

                    b.HasIndex("ID_LopHocPhan")
                        .IsUnique();

                    b.ToTable("PhanCongs");

                    b.HasData(
                        new
                        {
                            ID_LopHocPhan = "161INT001",
                            ID_GiangVien = "GV001"
                        },
                        new
                        {
                            ID_LopHocPhan = "161INT002",
                            ID_GiangVien = "GV001"
                        },
                        new
                        {
                            ID_LopHocPhan = "161INT003",
                            ID_GiangVien = "GV002"
                        },
                        new
                        {
                            ID_LopHocPhan = "161INT004",
                            ID_GiangVien = "GV002"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.Phong", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TenCoSo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Phongs");

                    b.HasData(
                        new
                        {
                            ID = "BPH001",
                            SoThuTu = 1,
                            TenCoSo = "624 Âu Cơ"
                        },
                        new
                        {
                            ID = "BPH002",
                            SoThuTu = 2,
                            TenCoSo = "624 Âu Cơ"
                        },
                        new
                        {
                            ID = "BPH003",
                            SoThuTu = 3,
                            TenCoSo = "624 Âu Cơ"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.SinhVien", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ID_LopBienChe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoThuTu")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ID_LopBienChe");

                    b.ToTable("SinhViens");

                    b.HasData(
                        new
                        {
                            ID = "161A010001",
                            DiaChi = "TPHCM",
                            Email = "ntc@gmail.com",
                            GioiTinh = 0,
                            Ho = "Nguyễn Thị",
                            HoTen = "Nguyễn Thị C",
                            ID_LopBienChe = "161A0101",
                            IsActive = 1,
                            Nam = 2016,
                            NgaySinh = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0123456789",
                            SoThuTu = 0,
                            Ten = "C"
                        },
                        new
                        {
                            ID = "161A010002",
                            DiaChi = "Hóc Môn",
                            Email = "nvd@gmail.com",
                            GioiTinh = 1,
                            Ho = "Nguyễn Văn",
                            HoTen = "Nguyễn Văn D",
                            ID_LopBienChe = "161A0101",
                            IsActive = 1,
                            Nam = 2016,
                            NgaySinh = new DateTime(1998, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0321456987",
                            SoThuTu = 0,
                            Ten = "D"
                        },
                        new
                        {
                            ID = "161A010003",
                            DiaChi = "5/9A Hóc Môn",
                            Email = "cuong.263@gmail.com",
                            GioiTinh = 1,
                            Ho = "Đào Tuấn",
                            HoTen = "Đào Tuấn Cường",
                            ID_LopBienChe = "161A0101",
                            IsActive = 1,
                            Nam = 2016,
                            NgaySinh = new DateTime(1998, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0904590481",
                            SoThuTu = 0,
                            Ten = "Cường"
                        });
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.ChiTiet_ChuongTrinhDaoTao_MonHoc", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.ChuongTrinhDaoTao", "ChuongTrinhDaoTao")
                        .WithMany("ChiTiet_ChuongTrinhDaoTao_MonHocs")
                        .HasForeignKey("ID_ChuongTrinhDaoTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Data.Entities.MonHoc", "MonHoc")
                        .WithMany("ChiTiet_ChuongTrinhDaoTao_MonHocs")
                        .HasForeignKey("ID_MonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Data.Entities.HocKy_NamHoc", "HocKy_NamHoc")
                        .WithMany("ChiTiet_ChuongTrinhDaoTao_MonHocs")
                        .HasForeignKey("HK_HocKy", "HK_NamHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.ChuongTrinhDaoTao", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.Khoa", "Khoa")
                        .WithMany("ChuongTrinhDaoTaos")
                        .HasForeignKey("Id_Khoa");
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.DanhSach_SinhVien_LopHocPhan", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.LopHocPhan", "LopHocPhan")
                        .WithMany("ChiTiet_SinhVien_LopHocPhans")
                        .HasForeignKey("ID_LopHocPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Data.Entities.SinhVien", "SinhVien")
                        .WithMany("ChiTiet_SinhVien_LopHocPhans")
                        .HasForeignKey("ID_SinhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.GiangVien", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.Khoa", "Khoa")
                        .WithMany("GiangViens")
                        .HasForeignKey("ID_Khoa");
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.LopBienChe", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.GiangVien", "GiangVien")
                        .WithMany("LopBienChes")
                        .HasForeignKey("ID_GiangVien");

                    b.HasOne("QuanLySinhVien.Data.Entities.Khoa", "Khoa")
                        .WithMany("LopBienChes")
                        .HasForeignKey("ID_Khoa");
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.LopHocPhan", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.MonHoc", "MonHoc")
                        .WithMany("LopHocPhans")
                        .HasForeignKey("ID_MonHoc");

                    b.HasOne("QuanLySinhVien.Data.Entities.Phong", "Phong")
                        .WithMany("LopHocPhans")
                        .HasForeignKey("ID_Phong");

                    b.HasOne("QuanLySinhVien.Data.Entities.HocKy_NamHoc", "HocKy_NamHoc")
                        .WithMany("LopHocPhans")
                        .HasForeignKey("HK_HocKy", "HK_NamHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.MonHoc", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.Khoa", "Khoa")
                        .WithMany("MonHocs")
                        .HasForeignKey("ID_Khoa");
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.PhanCong", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.GiangVien", "GiangVien")
                        .WithMany("PhanCongs")
                        .HasForeignKey("ID_GiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLySinhVien.Data.Entities.LopHocPhan", "LopHocPhan")
                        .WithOne("PhanCong")
                        .HasForeignKey("QuanLySinhVien.Data.Entities.PhanCong", "ID_LopHocPhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLySinhVien.Data.Entities.SinhVien", b =>
                {
                    b.HasOne("QuanLySinhVien.Data.Entities.LopBienChe", "LopBienChe")
                        .WithMany("SinhViens")
                        .HasForeignKey("ID_LopBienChe");
                });
#pragma warning restore 612, 618
        }
    }
}
